// GLOBALS

@textColor: #222;

// Backgound styles

.noiseBackground( @color ) {
  background: @color @noise;
}

.noiseBackground( @color, @color2 ) {
   background: @noise, -webkit-linear-gradient(top, @color 0%, @color2 100%);
   background: @noise, -moz-linear-gradient(to, @color 0%,@color2 100%);
   background: @noise, -ms-linear-gradient(top, @color 0%,@color2 100%);
   background: @noise, -o-linear-gradient(top, @color 0%,@color2 100%);
   background: @noise, linear-gradient(top, @color);
}

._gradient(@angle, @startCol, @stopCol, @startLoc, @endLoc, @startPerc, @stopPerc) {
   background: -webkit-gradient(linear,left @startLoc,left @endLoc,color-stop(@startPerc,@startCol),color-stop(@stopPerc,@stopCol));
   background: -webkit-linear-gradient(@angle @startLoc,@startCol @startPerc,@stopCol @stopPerc);
   background: -moz-linear-gradient(@angle @startLoc,@startCol @startPerc,@stopCol @stopPerc);
   background: -ms-linear-gradient(@angle @startLoc,@startCol @startPerc,@stopCol @stopPerc);
   background: -o-linear-gradient(@angle @startLoc,@startCol @startPerc,@stopCol @stopPerc);
   background: linear-gradient(@angle @startLoc, @startCol);
} 

.gradient( "vertical", @color, @color2, @from: 0%, @to: 100% ) {
  background: -moz-linear-gradient(top, @color @from, @color2 @to);
  background: -webkit-linear-gradient(top, @color @from, @color2 @to);
  background: -o-linear-gradient(top, @color @from, @color2 @to);
  background: -ms-linear-gradient(top, @color @from, @color2 @to);
  background: linear-gradient(top, @color @from, @color2 @to);
}

.gradient( "wash", @color, @color2, @color3, @coverage: 100%, @corner: top right ) {
  background: @noise,
    -moz-linear-gradient( @corner, @color3 0%, fade( @color3, 0% ) @coverage ),
    -moz-linear-gradient(top, @color 0%, @color2 100%);
  background: @noise,
    -webkit-linear-gradient( @corner, @color3 0%, fade( @color3, 0% ) @coverage ),
    -webkit-linear-gradient(top, @color 0%, @color2 100%);
  background: @noise,
    -o-linear-gradient( @corner, @color3 0%, fade( @color3, 0% ) @coverage ),
    -o-linear-gradient(top, @color 0%, @color2 100%);
  background: @noise,
    -ms-linear-gradient( @corner, @color3 0%, fade( @color3, 0% ) @coverage ),
    -ms-linear-gradient(top, @color 0%, @color2 100%);
  background: @noise,
    linear-gradient( @corner, @color3 0%, fade( @color3, 0% ) @coverage ),
    linear-gradient(top, @color 0%, @color2 100%);
  background-repeat: no-repeat;
  background-clip: fixed;
}

.gradiatedBorder( @color ) {
  border: 1px solid darken( @color, 10% );
  border-top-color: darken( @color, 5% );
  border-bottom-color: darken( @color, 15% );
}

.gradiatedBorder( @color ) when ( lightness( @color ) > 40% ) {
  border: 1px solid darken( @color, 20% );
  border-top-color: darken( @color, 10% );
  border-bottom-color: darken( @color, 25% );
}

.gradiatedBorder( @colorTop, @color, @colorBottom ) {
  border: 1px solid @color;
  border-top-color: @colorTop;
  border-bottom-color: @colorBottom;
}

.glow( @color, @shadow: 0 1px 2px 0 rgba( 0, 0, 0, .2 ) ) {
  box-shadow: inset 0 1px 0 0 lighten( @color, 20% ),
    inset 1px 0 0 0 lighten( @color, 2%),
    inset -1px 0 0 0 lighten( @color, 2%),
    inset 0 -1px 0 0 lighten( @color, 2%),
    @shadow;
}

.transition( @arguments: all .2s ease ) {
  -webkit-transition: @arguments;
  -moz-transition: @arguments;
  -o-transition: @arguments;
  -ms-transition: @arguments;
  transition: @arguments;
}

.clearfix() {
  *zoom: 1;
  &:before, 
  &:after { 
    content: "";
    display: table; 
  }
  &:after { clear: both; }
}
